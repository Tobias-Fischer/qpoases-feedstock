From df6576e8eb790d2bff916b243f60d44603ea3ceb Mon Sep 17 00:00:00 2001
From: Fabian Schramm <55981657+fabinsch@users.noreply.github.com>
Date: Tue, 15 Nov 2022 17:06:55 +0100
Subject: [PATCH] fix python interface

---
 interfaces/python/setup.py               | 12 ++++++++----
 interfaces/python/tests/test_examples.py | 20 +++++++++++++-------
 2 files changed, 21 insertions(+), 11 deletions(-)

diff --git a/interfaces/python/setup.py b/interfaces/python/setup.py
index 913f8da..a003063 100755
--- a/interfaces/python/setup.py
+++ b/interfaces/python/setup.py
@@ -49,7 +49,8 @@ extra_params['include_dirs'] = [
     os.path.join(BASEDIR, 'include'),
     os.path.join(BASEDIR, 'include', 'qpOASES'),
     np.get_include()]
-extra_params['extra_compile_args'] = ["-O2", "-Wno-unused-variable"]
+if platform.system() in ['Linux', 'Darwin']:
+    extra_params['extra_compile_args'] = ["-O2", "-Wno-unused-variable"]
 extra_params['extra_link_args'] = ["-Wl,-O1", "-Wl,--as-needed"]
 
 extra_params = extra_params.copy()
@@ -59,12 +60,15 @@ extra_params['library_dirs'] = ['/usr/lib', os.path.join(BASEDIR, 'bin')]
 extra_params['language'] = 'c++'
 
 if platform.system() in ['Linux', 'Darwin']:
-    extra_params['extra_compile_args'] = ['-D__USE_LONG_INTEGERS__',
+    extra_params['extra_compile_args'] = [
+            # '-D__USE_LONG_INTEGERS__',
             '-D__USE_LONG_FINTS__']
 
 if platform.system() == 'Darwin':
+    # extra_params['include_dirs'].append(
+    #         '/Library/Developer/CommandLineTools/usr/include/c++/v1')
     extra_params['include_dirs'].append(
-            '/Library/Developer/CommandLineTools/usr/include/c++/v1')
+            '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk')
     extra_params['extra_compile_args'] += ['-stdlib=libc++',
         '-Wno-c++11-long-long']
     extra_params['extra_link_args'] = ['-stdlib=libc++'] # override the others!
@@ -89,7 +93,7 @@ if os.name == 'posix':
         "-finline-functions",
         "-fPIC",
         "-DLINUX",
-        "-D__USE_LONG_INTEGERS__",
+        # "-D__USE_LONG_INTEGERS__",
         "-D__USE_LONG_FINTS__",
         "-D__NO_COPYRIGHT__",
     ]
diff --git a/interfaces/python/tests/test_examples.py b/interfaces/python/tests/test_examples.py
index a345188..89f2379 100644
--- a/interfaces/python/tests/test_examples.py
+++ b/interfaces/python/tests/test_examples.py
@@ -45,12 +45,12 @@ qpoases_path = os.path.dirname(qpoases_path)
 qpoases_path = os.path.dirname(qpoases_path)
 
 # set qpOASES binary path
-bin_path = os.path.join(qpoases_path, "bin")
+bin_path = os.path.join("build", "bin")
 
 class TestExamples(TestCase):
 
     def test_example1(self):
-        return 0
+        # return 0
         # Example for qpOASES main function using the QProblem class.
         #Setup data of first QP.
 
@@ -92,6 +92,9 @@ class TestExamples(TestCase):
         objVal_actual = np.asarray(objVal_actual, dtype=float)
 
         cmd = os.path.join(bin_path, "example1")
+        print("cmd: ", cmd)
+        isFile = os.path.isfile(cmd)
+        print("isFile: ", isFile)
         p = Popen(cmd, shell=True, stdout=PIPE)
         stdout, stderr = p.communicate()
         stdout = str(stdout).replace('\\n', '\n')
@@ -152,8 +155,8 @@ class TestExamples(TestCase):
         xOpt_actual = np.asarray(xOpt_actual, dtype=float)
         objVal_actual = qp.getObjVal()
         objVal_actual = np.asarray(objVal_actual, dtype=float)
-        print 'xOpt_actual:', xOpt_actual
-        print 'objVal_actual:', objVal_actual
+        print("xOpt_actual =", xOpt_actual)
+        print("objVal_actual =", objVal_actual)
 
         # Solve second QP.
         nWSR = 10
@@ -164,8 +167,8 @@ class TestExamples(TestCase):
         xOpt_actual = np.asarray(xOpt_actual, dtype=float)
         objVal_actual = qp.getObjVal()
         objVal_actual = np.asarray(objVal_actual, dtype=float)
-        print 'xOpt_actual:', xOpt_actual
-        print 'objVal_actual:', objVal_actual
+        print("xOpt_actual =", xOpt_actual)
+        print("objVal_actual =", objVal_actual)
 
         # Get and print solution of second QP.
         xOpt_actual = np.zeros(2)
@@ -175,6 +178,9 @@ class TestExamples(TestCase):
         objVal_actual = np.asarray(objVal_actual, dtype=float)
 
         cmd = os.path.join(bin_path, "example1b")
+        print("cmd: ", cmd)
+        isFile = os.path.isfile(cmd)
+        print("isFile: ", isFile)
         p = Popen(cmd, shell=True, stdout=PIPE)
         stdout, stderr = p.communicate()
         stdout = str(stdout).replace('\\n', '\n')
@@ -189,7 +195,7 @@ class TestExamples(TestCase):
 
         pattern = re.compile(r'objVal = (?P<objVal>[0-9-+e.]*)')
         match = pattern.findall(stdout)
-        print match
+        print(match)
         objVal_expected = match[-1]
         objVal_expected = np.asarray(objVal_expected, dtype=float)
 
-- 
2.25.1

